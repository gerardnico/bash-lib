.\" Automatically generated by Pandoc 2.17.1.1
.\"
.\" Define V font for inline verbatim, using C font in formats
.\" that render this, and otherwise B font.
.ie "\f[CB]x\f[]"x" \{\
. ftr V B
. ftr VI BI
. ftr VB B
. ftr VBI BI
.\}
.el \{\
. ftr V CR
. ftr VI CI
. ftr VB CB
. ftr VBI CBI
.\}
.TH "bashlib-docgen" "1" "" "Version Latest" "Generate markdown and man page documentation"
.hy
.SH NAME
.PP
A script that will generate markdown and man page documentation from:
.IP \[bu] 2
a bash library
.IP \[bu] 2
or a script
.SS DESCRIPTION
.PP
With this script, you can generate documentation for a library or for a
script
.PP
A library:
.IP \[bu] 2
has no bash shebang
.IP \[bu] 2
is not executable
.IP \[bu] 2
has the extension \[ga]sh\[ga]
.PP
A script file:
.IP \[bu] 2
has a bash shebang
.IP \[bu] 2
is executable
.IP \[bu] 2
has a help option (\[ga]-h\[ga]) or command (\[ga]help\[ga])
.PP
They are searched by default in the \f[V]bin\f[R] and \f[V]lib\f[R]
directories.
.SS HOW IT WORKS
.SS For a library
.IP \[bu] 2
the markdown file are generated via
shdoc (https://github.com/reconquest/shdoc)
.IP \[bu] 2
no manpage is generated
.SS For a script
.IP \[bu] 2
you need to create a pandoc markdown file manually in
\f[V]docs/bin\f[R].
Example of pandoc file with pandoc
metadata (https://pandoc.org/MANUAL.html#metadata-blocks)
.IP
.nf
\f[C]
% your-script-name(1) Version 1.0.0 | The title
# NAME
# SYNOPSIS

# ....
\f[R]
.fi
.IP \[bu] 2
The man pages are generated into \f[V]build/docs/man/man1\f[R] and
installed locally.
.SS Tips for script
.IP \[bu] 2
You can use your man page in your help function.
Example:
.IP
.nf
\f[C]
help(){
  man \[dq]$(basename $0)\[dq]
}
\f[R]
.fi
.IP \[bu] 2
Or you can use the \f[V]doc::help\f[R] utility with a \f[V]synopsis\f[R]
function.
.IP
.nf
\f[C]
source bashlib-doc.sh
help(){
  doc::help \[dq]synopsis\[dq]
}
\f[R]
.fi
.IP \[bu] 2
If a command called \f[V]synopsis\f[R] is found, \f[V]docgen\f[R] will
substitute \f[V]${SYNOPSIS}\f[R] in your markdown
.IP
.nf
\f[C]
# SYNOPSIS

${SYNOPSIS}
\f[R]
.fi
.IP \[bu] 2
For your subcommand, you can use the \f[V]doc::help\f[R] utility
.IP
.nf
\f[C]
source bashlib-doc.sh
doc::help \[dq]synopsis_function_for_sub_command\[dq]
\f[R]
.fi
.SS SYNOPSIS
.IP
.nf
\f[C]
bashlib-docgen [-o outputDir] [bashDir1 bashDir2 ...]
\f[R]
.fi
.PP
where:
.IP \[bu] 2
\f[V]-o\f[R] - is the output directory (default to \f[V]docs\f[R])
.IP \[bu] 2
\f[V]-h\f[R] - shows this help
.IP \[bu] 2
\f[V]bashDir\f[R] - one or more directories with bash scripts or
libraries (default to \f[V]lib\f[R] and \f[V]bin\f[R])
